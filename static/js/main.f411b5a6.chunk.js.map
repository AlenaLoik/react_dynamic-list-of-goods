{"version":3,"sources":["GoodsList.tsx","Api.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","key","id","name","getGoods","fetch","then","response","json","FILTERS","count","showAll","App","state","isLoaded","filterGoods","viewParam","setState","data","filter","sort","goodPrew","goodCurr","localeCompare","slice","Object","values","href","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAOaA,G,MAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC5C,wBAAIC,UAAU,cACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QACxBC,IAAKH,EAAKI,IAETJ,EAAKK,YCbDC,EAAW,WACtB,OAAOC,MAAM,yEACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCQzBC,EAAU,CAAET,MAAO,MAAOU,MAAO,SAAUC,QAAS,OAoE3CC,E,4MAjEbC,MAAQ,CACNlB,MAAO,GACPmB,UAAU,G,EAGZC,YAAc,SAACC,GAKb,OAJA,EAAKC,SAAS,CACZH,UAAU,IAGJE,GACN,KAAKP,EAAQT,MACXI,IACGE,MAAK,SAACY,GACL,EAAKD,SAAS,CACZtB,MAAOuB,EAAKC,QAAO,SAACrB,GAAD,OACjBA,EAAKE,QAAUS,EAAQT,cAI/B,MACF,KAAKS,EAAQC,MACXN,IACGE,MAAK,SAACY,GACL,EAAKD,SAAS,CACZtB,MAAOuB,EAAKE,MAAK,SAACC,EAAgBC,GAAjB,OACfD,EAASlB,KAAKoB,cAAcD,EAASnB,SAAQqB,MAAM,EAAG,QAG9D,MACF,QACEpB,IACGE,MAAK,SAACY,GACL,EAAKD,SAAS,CACZtB,MAAOuB,S,uDAMT,IAAD,OACP,OACE,oCACE,qDACA,wBAAItB,UAAU,WACX6B,OAAOC,OAAOjB,GAASZ,KAAI,SAAAsB,GAAM,OAChC,wBAAIvB,UAAU,mBACd,uBACEA,UAAU,gBACV+B,KAAI,YAAOR,GACXS,QAAS,kBAAO,EAAKb,YAAYI,KAEhCA,QAKLU,KAAKhB,MAAMC,SACT,kBAAC,EAAD,CAAWnB,MAAOkC,KAAKhB,MAAMlB,QAC7B,Q,GA5DMmC,IAAMC,WCTxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f411b5a6.chunk.js","sourcesContent":["import React from 'react';\nimport Good from './Good';\n\ntype GoodsList = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<GoodsList> = ({ goods }) => (\n  <ul className=\"good__list\">\n    {goods.map(good => (\n      <li\n        style={{ color: `${good.color}` }}\n        key={good.id}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","\nexport const getGoods = () => {\n  return fetch('https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json')\n    .then(response => response.json());\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\nimport Good from './Good';\nimport { getGoods } from './Api';\n\ntype AppState = {\n  goods: Good[];\n  isLoaded: boolean;\n};\n\nconst FILTERS = { color: 'red', count: 'sort 5', showAll: 'all' };\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    goods: [],\n    isLoaded: false,\n  };\n\n  filterGoods = (viewParam: string) => {\n    this.setState({\n      isLoaded: true,\n    });\n\n    switch (viewParam) {\n      case FILTERS.color:\n        getGoods()\n          .then((data) => {\n            this.setState({\n              goods: data.filter((good: Good) => (\n                good.color === FILTERS.color\n              )),\n            });\n          });\n        break;\n      case FILTERS.count:\n        getGoods()\n          .then((data) => {\n            this.setState({\n              goods: data.sort((goodPrew: Good, goodCurr: Good) => (\n                goodPrew.name.localeCompare(goodCurr.name))).slice(0, 6),\n            });\n          });\n        break;\n      default:\n        getGoods()\n          .then((data) => {\n            this.setState({\n              goods: data,\n            });\n          });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <ul className=\"filters\">\n          {Object.values(FILTERS).map(filter => (\n            <li className=\"filters__button\">\n            <a\n              className=\"filters__link\"\n              href={`#/${filter}`}\n              onClick={() => (this.filterGoods(filter))}\n            >\n              {filter}\n            </a>\n          </li>\n        ))}\n      </ul>\n        {(this.state.isLoaded)\n          ? <GoodsList goods={this.state.goods} />\n          : ''}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}